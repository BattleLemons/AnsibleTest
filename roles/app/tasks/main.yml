---
- name: Install Python3 and pip
  ansible.builtin.apt:
    name:
      - python3
      - python3-venv
      - python3-pip
    state: present
  become: yes
  tags: ['install']

- name: Create app directory
  ansible.builtin.file:
    path: "{{ app_directory }}"
    state: directory
    owner: "{{ app_user }}"
    mode: '0755'
  become: yes
  tags: ['configure']

- name: Create a Python virtual environment in the app directory
  ansible.builtin.command: python3 -m venv {{ app_directory }}/venv
  args:
    creates: "{{ app_directory }}/venv/bin/activate"
  become: yes
  tags: ['install']

- name: Upgrade pip in the virtual environment
  ansible.builtin.command: "{{ app_directory }}/venv/bin/pip install --upgrade pip"
  become: yes
  tags: ['install']

- name: Install Flask via pip in virtual environment
  ansible.builtin.pip:
    name: Flask
    virtualenv: "{{ app_directory }}/venv"
    virtualenv_python: python3
  become: yes
  tags: ['install']

- name: Deploy Flask app code
  ansible.builtin.template:
    src: app.py.j2
    dest: "{{ app_directory }}/app.py"
  become: yes
  tags: ['configure']

- name: Install Gunicorn via pip in virtual environment
  ansible.builtin.pip:
    name: gunicorn
    virtualenv: "{{ app_directory }}/venv"
    virtualenv_python: python3
  become: yes
  tags: ['install']

- name: Start the Flask app with Gunicorn
  ansible.builtin.command: >
    {{ app_directory }}/venv/bin/gunicorn --bind 0.0.0.0:{{ app_port }} app:app --daemon
  args:
    chdir: "{{ app_directory }}"
  become: yes
  tags: ['service']

- name: Kill existing Gunicorn processes (if any)
  ansible.builtin.shell: "pkill gunicorn || true"
  become: yes
  tags: ['service']

- name: Deploy the systemd service file for the Flask app
  ansible.builtin.template:
    src: app.service.j2
    dest: /etc/systemd/system/app.service
  become: yes
  tags: ['service']

- name: Reload systemd daemon to read the new service file
  ansible.builtin.command: systemctl daemon-reload
  become: yes
  tags: ['service']

- name: Enable and start the Flask app service
  ansible.builtin.systemd:
    name: app.service
    enabled: yes
    state: started
  become: yes
  tags: ['service']